@model DFTRK.ViewModels.RetailerPurchasesViewModel

@{
    ViewData["Title"] = "Purchase Report";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h3><i class="bi bi-receipt me-2"></i>Purchase Report</h3>
            <p class="text-muted">Simple overview of your purchases from wholesalers and partners</p>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="startDate" class="form-label">From Date</label>
                    <input type="date" class="form-control" id="startDate" name="startDate" 
                           value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-3">
                    <label for="endDate" class="form-label">To Date</label>
                    <input type="date" class="form-control" id="endDate" name="endDate" 
                           value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-4">
                    <label for="supplierId" class="form-label">Specific Supplier</label>
                    <select class="form-select" id="supplierId" name="supplierId">
                        <option value="">All Suppliers</option>
                        @foreach (var supplier in Model.Suppliers)
                        {
                            @if (Model.SupplierId == supplier.Id)
                            {
                                <option value="@supplier.Id" selected>@supplier.DisplayName</option>
                            }
                            else
                            {
                                <option value="@supplier.Id">@supplier.DisplayName</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search me-1"></i>Apply Filter
                    </button>
                    <a href="/Reports/RetailerPurchases" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise me-1"></i>Reset
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <h4 class="text-primary">@Model.Orders.Count()</h4>
                    <p class="mb-0">Total Orders</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <h4 class="text-success">$@Model.TotalSpent.ToString("N2")</h4>
                    <p class="mb-0">Total Purchases</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <h4 class="text-info">$@Model.TotalPaid.ToString("N2")</h4>
                    <p class="mb-0">Total Paid</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <h4 class="text-warning">$@((Model.TotalSpent - Model.TotalPaid).ToString("N2"))</h4>
                    <p class="mb-0">Outstanding</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <p><strong>Total Paid:</strong> <span class="text-success">$@Model.TotalPaid.ToString("N2")</span></p>
            <p><strong>Outstanding Balance:</strong> <span class="text-danger">$@((Model.TotalSpent - Model.TotalPaid).ToString("N2"))</span></p>
        </div>
    </div>

    <!-- Spending by Category Section -->
    @if (Model.SpendingByCategory.Any())
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-pie"></i> Top 5 Categories by Spending</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Category</th>
                                        <th class="text-end">Total Spent</th>
                                        <th class="text-end">Orders</th>
                                        <th class="text-end">Products</th>
                                        <th class="text-end">Avg per Order</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in Model.SpendingByCategory)
                                    {
                                        <tr>
                                            <td><strong>@category.CategoryName</strong></td>
                                            <td class="text-end"><strong>$@category.TotalSpent.ToString("N2")</strong></td>
                                            <td class="text-end">@category.OrderCount</td>
                                            <td class="text-end">@category.ProductCount</td>
                                            <td class="text-end">$@((category.OrderCount > 0 ? category.TotalSpent / category.OrderCount : 0).ToString("N2"))</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <h3>Purchase History</h3>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-list-ul me-2"></i>Purchase Orders</h5>
        </div>
        <div class="card-body">
            @if (Model.Orders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Order #</th>
                                <th>Date</th>
                                <th>Supplier</th>
                                <th>Type</th>
                                <th>Status</th>
                                <th>Total</th>
                                <th>Paid</th>
                                <th>Outstanding</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                // Get transaction for this order using the TransactionLookup dictionary
                                Model.TransactionLookup.TryGetValue(order.Id, out var transaction);
                                
                                // Use the AmountPaid from the transaction lookup
                                var amountPaid = transaction?.AmountPaid ?? 0;
                                var orderTotal = order.TotalAmount;
                                var outstanding = Math.Max(0, orderTotal - amountPaid);
                                
                                <tr>
                                    <td><strong>#@order.Id</strong></td>
                                    <td>@order.OrderDate.ToString("MMM d, yyyy")</td>
                                    <td>
                                        @if (order.Wholesaler != null)
                                        {
                                            @order.Wholesaler.BusinessName
                                        }
                                        else if (order.WholesalerId == null && order.Notes != null && order.Notes.StartsWith("Partnership Order from: "))
                                        {
                                            @order.Notes.Substring("Partnership Order from: ".Length).Split('\n')[0]
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unknown Supplier</span>
                                        }
                                    </td>
                                    <td>
                                        @if (order.WholesalerId != null)
                                        {
                                            <span class="badge bg-primary">Wholesaler</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-info">Partner</span>
                                        }
                                    </td>
                                    <td>
                                        @switch (order.Status.ToString().ToLower())
                                        {
                                            case "completed":
                                                <span class="badge bg-success">@order.Status</span>
                                                break;
                                            case "pending":
                                                <span class="badge bg-warning">@order.Status</span>
                                                break;
                                            case "cancelled":
                                                <span class="badge bg-danger">@order.Status</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">@order.Status</span>
                                                break;
                                        }
                                    </td>
                                    <td><strong>$@orderTotal.ToString("N2")</strong></td>
                                    <td class="text-success">$@amountPaid.ToString("N2")</td>
                                    <td class="text-danger">$@outstanding.ToString("N2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-inbox display-4 text-muted"></i>
                    <h5 class="text-muted mt-3">No purchases found</h5>
                    <p class="text-muted">Try adjusting your date range or filters.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Simple form submission - no complex JavaScript needed
        console.log('Purchase Report loaded');
    </script>
} 